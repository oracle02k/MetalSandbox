namespace passthrought_texture {

struct VertexIn {
    float3 position [[ attribute(0) ]];
    float2 texCoord [[ attribute(1) ]];
};

struct VertexOut {
    float4 position [[ position ]];
    float2 texCoord;
};

vertex VertexOut vs(
    const VertexIn v[[stage_in]]
) {
    VertexOut vOut;
    vOut.position = simd_float4(v.position,1);
    vOut.texCoord = v.texCoord;

    return vOut;
}

fragment simd_float4 fs(
    const VertexOut vIn [[ stage_in ]],
    const texture2d<float> colorTexture [[texture(0)]]
) {
    constexpr sampler colorSampler(mip_filter::nearest, mag_filter::nearest, min_filter::nearest);
    simd_float4 color = colorTexture.sample(colorSampler, vIn.texCoord);
    return simd_float4(color.rgb,1);
}

}
